{"ast":null,"code":"var _jsxFileName = \"D:\\\\task management app\\\\zidio-task-management-web-app\\\\src\\\\components\\\\Column.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Task from \"./Task\";\nimport \"../styles/Column&Task.css\";\nimport boardsSlice from \"../redux/boardsSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Column({\n  colIndex\n}) {\n  _s();\n  const dispatch = useDispatch();\n  const boards = useSelector(state => state.boards);\n  const board = boards.find(board => board.isActive === true);\n  const col = board.columns.find((col, i) => i === colIndex);\n  const handleOnDrop = e => {\n    const {\n      prevColIndex,\n      taskIndex\n    } = JSON.parse(e.dataTransfer.getData(\"text\"));\n    if (colIndex !== prevColIndex) {\n      dispatch(boardsSlice.actions.dragTask({\n        colIndex,\n        prevColIndex,\n        taskIndex\n      }));\n    }\n  };\n  const handleOnDragOver = e => {\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"column\",\n    onDrop: handleOnDrop,\n    onDragOver: handleOnDragOver,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"col-name heading-S\",\n      children: [col.name, \" (\", col.tasks.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), col.tasks.map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(Task, {\n        taskIndex: index,\n        colIndex: colIndex\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Column, \"J0gPoHHtlgq3Z9wUf7/9gMQhGGc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Column;\nvar _c;\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"names":["React","Task","boardsSlice","useDispatch","useSelector","jsxDEV","_jsxDEV","Column","colIndex","_s","dispatch","boards","state","board","find","isActive","col","columns","i","handleOnDrop","e","prevColIndex","taskIndex","JSON","parse","dataTransfer","getData","actions","dragTask","handleOnDragOver","preventDefault","className","onDrop","onDragOver","children","name","tasks","length","fileName","_jsxFileName","lineNumber","columnNumber","map","task","index","_c","$RefreshReg$"],"sources":["D:/task management app/zidio-task-management-web-app/src/components/Column.js"],"sourcesContent":["import React from \"react\";\r\nimport Task from \"./Task\";\r\nimport \"../styles/Column&Task.css\";\r\nimport boardsSlice from \"../redux/boardsSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nexport default function Column({ colIndex }) {\r\n  const dispatch = useDispatch();\r\n  const boards = useSelector((state) => state.boards);\r\n  const board = boards.find((board) => board.isActive === true);\r\n  const col = board.columns.find((col, i) => i === colIndex);\r\n\r\n  const handleOnDrop = (e) => {\r\n    const { prevColIndex, taskIndex } = JSON.parse(e.dataTransfer.getData(\"text\"));\r\n\r\n    if (colIndex !== prevColIndex) {\r\n      dispatch(boardsSlice.actions.dragTask({ colIndex, prevColIndex, taskIndex }));\r\n    }\r\n  }\r\n\r\n  const handleOnDragOver = (e) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <div className=\"column\" onDrop={handleOnDrop} onDragOver={handleOnDragOver}>\r\n      <p className=\"col-name heading-S\">\r\n        {col.name} ({col.tasks.length})\r\n      </p>\r\n      {col.tasks.map((task, index) => {\r\n        return (\r\n          <Task key={index} taskIndex={index} colIndex={colIndex} />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,2BAA2B;AAClC,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,eAAe,SAASC,MAAMA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC3C,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,MAAM,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACD,MAAM,CAAC;EACnD,MAAME,KAAK,GAAGF,MAAM,CAACG,IAAI,CAAED,KAAK,IAAKA,KAAK,CAACE,QAAQ,KAAK,IAAI,CAAC;EAC7D,MAAMC,GAAG,GAAGH,KAAK,CAACI,OAAO,CAACH,IAAI,CAAC,CAACE,GAAG,EAAEE,CAAC,KAAKA,CAAC,KAAKV,QAAQ,CAAC;EAE1D,MAAMW,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,YAAY;MAAEC;IAAU,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACJ,CAAC,CAACK,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IAE9E,IAAIlB,QAAQ,KAAKa,YAAY,EAAE;MAC7BX,QAAQ,CAACR,WAAW,CAACyB,OAAO,CAACC,QAAQ,CAAC;QAAEpB,QAAQ;QAAEa,YAAY;QAAEC;MAAU,CAAC,CAAC,CAAC;IAC/E;EACF,CAAC;EAED,MAAMO,gBAAgB,GAAIT,CAAC,IAAK;IAC9BA,CAAC,CAACU,cAAc,CAAC,CAAC;EACpB,CAAC;EAED,oBACExB,OAAA;IAAKyB,SAAS,EAAC,QAAQ;IAACC,MAAM,EAAEb,YAAa;IAACc,UAAU,EAAEJ,gBAAiB;IAAAK,QAAA,gBACzE5B,OAAA;MAAGyB,SAAS,EAAC,oBAAoB;MAAAG,QAAA,GAC9BlB,GAAG,CAACmB,IAAI,EAAC,IAAE,EAACnB,GAAG,CAACoB,KAAK,CAACC,MAAM,EAAC,GAChC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACHzB,GAAG,CAACoB,KAAK,CAACM,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC9B,oBACEtC,OAAA,CAACL,IAAI;QAAaqB,SAAS,EAAEsB,KAAM;QAACpC,QAAQ,EAAEA;MAAS,GAA5CoC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAyC,CAAC;IAE9D,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAChC,EAAA,CA9BuBF,MAAM;EAAA,QACXJ,WAAW,EACbC,WAAW;AAAA;AAAAyC,EAAA,GAFJtC,MAAM;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}