{"ast":null,"code":"var _jsxFileName = \"D:\\\\task management app\\\\kanban-task-management-web-app\\\\src\\\\modals\\\\AddEditBoardModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport crossIcon from \"../assets/icon-cross.svg\";\nimport boardsSlice from \"../redux/boardsSlice\";\nimport \"../styles/BoardModals.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddEditBoardModal({\n  type,\n  setIsBoardModalOpen\n}) {\n  _s();\n  const dispatch = useDispatch();\n  const [isFirstLoad, setIsFirstLoad] = useState(true);\n  const [name, setName] = useState(\"\");\n  const [newColumns, setNewColumns] = useState([{\n    name: \"Todo\",\n    tasks: [],\n    id: uuidv4()\n  }, {\n    name: \"Doing\",\n    tasks: [],\n    id: uuidv4()\n  }]);\n  const [isValid, setIsValid] = useState(true);\n  const board = useSelector(state => state.boards).find(board => board.isActive);\n  if (type === \"edit\" && isFirstLoad) {\n    setNewColumns(board.columns.map(col => {\n      return {\n        ...col,\n        id: uuidv4()\n      };\n    }));\n    setName(board.name);\n    setIsFirstLoad(false);\n  }\n  const validate = () => {\n    setIsValid(false);\n    if (!name.trim()) {\n      return false;\n    }\n    for (let i = 0; i < newColumns.length; i++) {\n      if (!newColumns[i].name.trim()) {\n        return false;\n      }\n    }\n    setIsValid(true);\n    return true;\n  };\n  const onChange = (id, newValue) => {\n    setNewColumns(prevState => {\n      const newState = [...prevState];\n      const column = newState.find(col => col.id === id);\n      column.name = newValue;\n      return newState;\n    });\n  };\n  const onDelete = id => {\n    setNewColumns(prevState => prevState.filter(el => el.id !== id));\n  };\n  const onSubmit = type => {\n    setIsBoardModalOpen(false);\n    if (type === \"add\") {\n      dispatch(boardsSlice.actions.addBoard({\n        name,\n        newColumns\n      }));\n    } else {\n      dispatch(boardsSlice.actions.editBoard({\n        name,\n        newColumns\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-container dimmed\",\n    onClick: e => {\n      if (e.target !== e.currentTarget) {\n        return;\n      }\n      setIsBoardModalOpen(false);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [type === \"edit\" ? \"Edit\" : \"Add new\", \" board\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"board-name-input\",\n        children: \"Board Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: name,\n          onChange: e => setName(e.target.value),\n          id: \"board-name-input\",\n          type: \"text\",\n          placeholder: \"e.g. Web Design\",\n          className: !isValid && !name.trim() ? \"red-border\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), !isValid && !name.trim() && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"cant-be-empty-span text-L\",\n          children: \" Can't be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Board Columns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-columns\",\n        children: newColumns.map((column, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => {\n                  onChange(column.id, e.target.value);\n                },\n                type: \"text\",\n                value: column.name,\n                className: !isValid && !column.name.trim() ? \"red-border\" : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), !isValid && !column.name.trim() && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"cant-be-empty-span text-L\",\n                children: [\" \", \"Can't be empty\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: crossIcon,\n              alt: \"delete-column-icon\",\n              onClick: () => {\n                onDelete(column.id);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setNewColumns(state => [...state, {\n            name: \"\",\n            tasks: [],\n            id: uuidv4()\n          }]);\n        },\n        className: \"add-column-btn btn-light\",\n        children: \"+ Add New Column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const isValid = validate();\n          if (isValid === true) onSubmit(type);\n        },\n        className: \"create-btn\",\n        children: type === \"add\" ? \"Create New Board\" : \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(AddEditBoardModal, \"6cdxeshdFtIX3xF4gG5we6WY1UQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = AddEditBoardModal;\nvar _c;\n$RefreshReg$(_c, \"AddEditBoardModal\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","crossIcon","boardsSlice","v4","uuidv4","jsxDEV","_jsxDEV","AddEditBoardModal","type","setIsBoardModalOpen","_s","dispatch","isFirstLoad","setIsFirstLoad","name","setName","newColumns","setNewColumns","tasks","id","isValid","setIsValid","board","state","boards","find","isActive","columns","map","col","validate","trim","i","length","onChange","newValue","prevState","newState","column","onDelete","filter","el","onSubmit","actions","addBoard","editBoard","className","onClick","e","target","currentTarget","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","value","placeholder","index","src","alt","_c","$RefreshReg$"],"sources":["D:/task management app/kanban-task-management-web-app/src/modals/AddEditBoardModal.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport crossIcon from \"../assets/icon-cross.svg\";\r\nimport boardsSlice from \"../redux/boardsSlice\";\r\nimport \"../styles/BoardModals.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport default function AddEditBoardModal({ type, setIsBoardModalOpen }) {\r\n  const dispatch = useDispatch();\r\n  const [isFirstLoad, setIsFirstLoad] = useState(true);\r\n  const [name, setName] = useState(\"\");\r\n  const [newColumns, setNewColumns] = useState([\r\n    { name: \"Todo\", tasks: [], id: uuidv4() },\r\n    { name: \"Doing\", tasks: [], id: uuidv4() },\r\n  ]);\r\n  const [isValid, setIsValid] = useState(true);\r\n  const board = useSelector((state) => state.boards).find(\r\n    (board) => board.isActive\r\n  );\r\n\r\n  if (type === \"edit\" && isFirstLoad) {\r\n    setNewColumns(\r\n      board.columns.map((col) => {\r\n        return { ...col, id: uuidv4() };\r\n      })\r\n    );\r\n    setName(board.name);\r\n    setIsFirstLoad(false);\r\n  }\r\n\r\n  const validate = () => {\r\n    setIsValid(false);\r\n    if (!name.trim()) {\r\n      return false;\r\n    }\r\n    for (let i = 0; i < newColumns.length; i++) {\r\n      if (!newColumns[i].name.trim()) {\r\n        return false;\r\n      }\r\n    }\r\n    setIsValid(true);\r\n    return true;\r\n  };\r\n\r\n  const onChange = (id, newValue) => {\r\n    setNewColumns((prevState) => {\r\n      const newState = [...prevState];\r\n      const column = newState.find((col) => col.id === id);\r\n      column.name = newValue;\r\n      return newState;\r\n    });\r\n  };\r\n\r\n  const onDelete = (id) => {\r\n    setNewColumns((prevState) => prevState.filter((el) => el.id !== id));\r\n  };\r\n\r\n  const onSubmit = (type) => {\r\n    setIsBoardModalOpen(false);\r\n    if (type === \"add\") {\r\n      dispatch(boardsSlice.actions.addBoard({ name, newColumns }));\r\n    } else {\r\n      dispatch(boardsSlice.actions.editBoard({ name, newColumns }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"modal-container dimmed\"\r\n      onClick={(e) => {\r\n        if (e.target !== e.currentTarget) {\r\n          return;\r\n        }\r\n        setIsBoardModalOpen(false);\r\n      }}\r\n    >\r\n      <div className=\"modal\">\r\n        <h3>{type === \"edit\" ? \"Edit\" : \"Add new\"} board</h3>\r\n        <label htmlFor=\"board-name-input\">Board Name</label>\r\n        <div className=\"input-container\">\r\n          <input\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            id=\"board-name-input\"\r\n            type=\"text\"\r\n            placeholder=\"e.g. Web Design\"\r\n            className={!isValid && !name.trim() ? \"red-border\" : \"\"}\r\n          />\r\n          {!isValid && !name.trim() && (\r\n            <span className=\"cant-be-empty-span text-L\"> Can't be empty</span>\r\n          )}\r\n        </div>\r\n\r\n        <label>Board Columns</label>\r\n        <div className=\"modal-columns\">\r\n          {newColumns.map((column, index) => {\r\n            return (\r\n              <div className=\"modal-column\" key={index}>\r\n                <div className=\"input-container\">\r\n                  <input\r\n                    onChange={(e) => {\r\n                      onChange(column.id, e.target.value);\r\n                    }}\r\n                    type=\"text\"\r\n                    value={column.name}\r\n                    className={\r\n                      !isValid && !column.name.trim() ? \"red-border\" : \"\"\r\n                    }\r\n                  />\r\n                  {!isValid && !column.name.trim() && (\r\n                    <span className=\"cant-be-empty-span text-L\">\r\n                      {\" \"}\r\n                      Can't be empty\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <img\r\n                  src={crossIcon}\r\n                  alt=\"delete-column-icon\"\r\n                  onClick={() => {\r\n                    onDelete(column.id);\r\n                  }}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <button\r\n          onClick={() => {\r\n            setNewColumns((state) => [\r\n              ...state,\r\n              { name: \"\", tasks: [], id: uuidv4() },\r\n            ]);\r\n          }}\r\n          className=\"add-column-btn btn-light\"\r\n        >\r\n          + Add New Column\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            const isValid = validate();\r\n            if (isValid === true) onSubmit(type);\r\n          }}\r\n          className=\"create-btn\"\r\n        >\r\n          {type === \"add\" ? \"Create New Board\" : \"Save Changes\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}