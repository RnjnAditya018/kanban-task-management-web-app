{"ast":null,"code":"var _jsxFileName = \"D:\\\\task management app\\\\zidio-task-management-web-app\\\\src\\\\components\\\\Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"../styles/Header.css\";\nimport logo from \"../assets/logo-mobile.svg\";\nimport addTaskMobile from \"../assets/icon-add-task-mobile.svg\";\nimport iconDown from \"../assets/icon-chevron-down.svg\";\nimport iconUp from \"../assets/icon-chevron-up.svg\";\nimport elipsis from \"../assets/icon-vertical-ellipsis.svg\";\nimport HeaderDropdown from \"./HeaderDropdown\";\nimport ElipsisMenu from \"./ElipsisMenu.js\";\nimport AddEditTaskModal from \"../modals/AddEditTaskModal\";\nimport AddEditBoardModal from \"../modals/AddEditBoardModal\";\nimport DeleteModal from \"../modals/DeleteModal\";\nimport boardsSlice from \"../redux/boardsSlice\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n  const isBigScreen = useMediaQuery({\n    query: \"(min-width: 768px)\"\n  });\n  const dispatch = useDispatch();\n  const boards = useSelector(state => state.boards);\n  const board = boards.find(board => board.isActive);\n  const [openDropdown, setOpenDropdown] = useState(false);\n  const [isElipsisMenuOpen, setIsElipsisMenuOpen] = useState(false);\n  const [isBoardModalOpen, setIsBoardModalOpen] = useState(false);\n  const [boardType, setBoardType] = useState(\"\");\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isTaskModalOpen, setIsTaskModalOpen] = useState(false);\n  const onDropdownClick = () => {\n    setOpenDropdown(state => !state);\n    setIsElipsisMenuOpen(false);\n    setBoardType(\"add\");\n  };\n  const setOpenEditModal = () => {\n    setIsBoardModalOpen(true);\n    setIsElipsisMenuOpen(false);\n  };\n  const setOpenDeleteModal = () => {\n    setIsDeleteModalOpen(true);\n    setIsElipsisMenuOpen(false);\n  };\n  const onDeleteBtnClick = e => {\n    if (e.target.textContent === \"Delete\") {\n      dispatch(boardsSlice.actions.deleteBoard());\n      dispatch(boardsSlice.actions.setBoardActive({\n        index: 0\n      }));\n      setIsDeleteModalOpen(false);\n    } else {\n      setIsDeleteModalOpen(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-container\",\n        children: [isBigScreen && /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"logo-text\",\n          children: \"Zidio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 27\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-name-container heading-L\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"header-name\",\n          children: board.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), !isBigScreen && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: openDropdown ? iconUp : iconDown,\n          alt: \"dropdown opened/closed\",\n          onClick: () => {\n            onDropdownClick();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `add-task-btn heading-M ${board.columns.length === 0 && \"btn-off\"}`,\n        onClick: () => {\n          setIsTaskModalOpen(true);\n          setIsElipsisMenuOpen(false);\n        },\n        disabled: board.columns.length === 0,\n        children: isBigScreen ? \"+ Add New Task\" : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: addTaskMobile,\n          alt: \"add task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => {\n          setIsElipsisMenuOpen(prevState => !prevState);\n          setBoardType(\"edit\");\n        },\n        className: \"elipsis\",\n        src: elipsis,\n        alt: \"menu for deleting or editing board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), openDropdown && !isBigScreen && /*#__PURE__*/_jsxDEV(HeaderDropdown, {\n        setOpenDropdown: setOpenDropdown,\n        setIsBoardModalOpen: setIsBoardModalOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), isElipsisMenuOpen && /*#__PURE__*/_jsxDEV(ElipsisMenu, {\n        setOpenEditModal: setOpenEditModal,\n        setOpenDeleteModal: setOpenDeleteModal,\n        type: \"board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), isBoardModalOpen && /*#__PURE__*/_jsxDEV(AddEditBoardModal, {\n      type: boardType,\n      setIsBoardModalOpen: setIsBoardModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), isDeleteModalOpen && /*#__PURE__*/_jsxDEV(DeleteModal, {\n      type: \"board\",\n      title: board.name,\n      onDeleteBtnClick: onDeleteBtnClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), isTaskModalOpen && /*#__PURE__*/_jsxDEV(AddEditTaskModal, {\n      setIsAddTaskModalOpen: setIsTaskModalOpen,\n      type: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"1QZuBfhgU4WJPlj5QANPQzPHMDw=\", false, function () {\n  return [useMediaQuery, useDispatch, useSelector];\n});\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","logo","addTaskMobile","iconDown","iconUp","elipsis","HeaderDropdown","ElipsisMenu","AddEditTaskModal","AddEditBoardModal","DeleteModal","boardsSlice","useMediaQuery","jsxDEV","_jsxDEV","Header","_s","isBigScreen","query","dispatch","boards","state","board","find","isActive","openDropdown","setOpenDropdown","isElipsisMenuOpen","setIsElipsisMenuOpen","isBoardModalOpen","setIsBoardModalOpen","boardType","setBoardType","isDeleteModalOpen","setIsDeleteModalOpen","isTaskModalOpen","setIsTaskModalOpen","onDropdownClick","setOpenEditModal","setOpenDeleteModal","onDeleteBtnClick","e","target","textContent","actions","deleteBoard","setBoardActive","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","src","alt","onClick","columns","length","disabled","prevState","type","title","setIsAddTaskModalOpen","_c","$RefreshReg$"],"sources":["D:/task management app/zidio-task-management-web-app/src/components/Header.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../styles/Header.css\";\r\nimport logo from \"../assets/logo-mobile.svg\";\r\nimport addTaskMobile from \"../assets/icon-add-task-mobile.svg\";\r\nimport iconDown from \"../assets/icon-chevron-down.svg\";\r\nimport iconUp from \"../assets/icon-chevron-up.svg\";\r\nimport elipsis from \"../assets/icon-vertical-ellipsis.svg\";\r\nimport HeaderDropdown from \"./HeaderDropdown\";\r\nimport ElipsisMenu from \"./ElipsisMenu.js\";\r\nimport AddEditTaskModal from \"../modals/AddEditTaskModal\";\r\nimport AddEditBoardModal from \"../modals/AddEditBoardModal\";\r\nimport DeleteModal from \"../modals/DeleteModal\";\r\nimport boardsSlice from \"../redux/boardsSlice\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nexport default function Header() {\r\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 768px)\" });\r\n  const dispatch = useDispatch();\r\n  const boards = useSelector((state) => state.boards);\r\n  const board = boards.find((board) => board.isActive);\r\n\r\n  const [openDropdown, setOpenDropdown] = useState(false);\r\n  const [isElipsisMenuOpen, setIsElipsisMenuOpen] = useState(false);\r\n  const [isBoardModalOpen, setIsBoardModalOpen] = useState(false);\r\n  const [boardType, setBoardType] = useState(\"\");\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [isTaskModalOpen, setIsTaskModalOpen] = useState(false);\r\n\r\n  const onDropdownClick = () => {\r\n    setOpenDropdown((state) => !state);\r\n    setIsElipsisMenuOpen(false);\r\n    setBoardType(\"add\");\r\n  };\r\n\r\n  const setOpenEditModal = () => {\r\n    setIsBoardModalOpen(true);\r\n    setIsElipsisMenuOpen(false);\r\n  };\r\n  const setOpenDeleteModal = () => {\r\n    setIsDeleteModalOpen(true);\r\n    setIsElipsisMenuOpen(false);\r\n  };\r\n\r\n  const onDeleteBtnClick = (e) => {\r\n    if (e.target.textContent === \"Delete\") {\r\n      dispatch(boardsSlice.actions.deleteBoard());\r\n      dispatch(boardsSlice.actions.setBoardActive({ index: 0 }));\r\n      setIsDeleteModalOpen(false);\r\n    } else {\r\n      setIsDeleteModalOpen(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"header-container\">\r\n      <header>\r\n        <div className=\"logo-container\">\r\n          {/* <img className=\"logo\" src={logo} alt=\"logo\" /> */}\r\n          {isBigScreen && <h3 className=\"logo-text\">Zidio</h3>}{\" \"}\r\n        </div>\r\n\r\n        <div className=\"header-name-container heading-L\">\r\n          <h3 className=\"header-name\">{board.name}</h3>\r\n          {!isBigScreen && (\r\n            <img\r\n              src={openDropdown ? iconUp : iconDown}\r\n              alt=\"dropdown opened/closed\"\r\n              onClick={() => {\r\n                onDropdownClick();\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n        <button\r\n          className={`add-task-btn heading-M ${board.columns.length === 0 && \"btn-off\"}`}\r\n          onClick={() => {\r\n            setIsTaskModalOpen(true);\r\n            setIsElipsisMenuOpen(false);\r\n          }}\r\n          disabled={board.columns.length === 0}\r\n        >\r\n          {isBigScreen ? (\r\n            \"+ Add New Task\"\r\n          ) : (\r\n            <img src={addTaskMobile} alt=\"add task\" />\r\n          )}\r\n        </button>\r\n        <img\r\n          onClick={() => {\r\n            setIsElipsisMenuOpen((prevState) => !prevState);\r\n            setBoardType(\"edit\");\r\n          }}\r\n          className=\"elipsis\"\r\n          src={elipsis}\r\n          alt=\"menu for deleting or editing board\"\r\n        />\r\n\r\n        {openDropdown && !isBigScreen && (\r\n          <HeaderDropdown\r\n            setOpenDropdown={setOpenDropdown}\r\n            setIsBoardModalOpen={setIsBoardModalOpen}\r\n          />\r\n        )}\r\n        {isElipsisMenuOpen && (\r\n          <ElipsisMenu\r\n            setOpenEditModal={setOpenEditModal}\r\n            setOpenDeleteModal={setOpenDeleteModal}\r\n            type=\"board\"\r\n          />\r\n        )}\r\n      </header>\r\n      {isBoardModalOpen && (\r\n        <AddEditBoardModal\r\n          type={boardType}\r\n          setIsBoardModalOpen={setIsBoardModalOpen}\r\n        />\r\n      )}\r\n      {isDeleteModalOpen && (\r\n        <DeleteModal\r\n          type=\"board\"\r\n          title={board.name}\r\n          onDeleteBtnClick={onDeleteBtnClick}\r\n        />\r\n      )}\r\n      {isTaskModalOpen && (\r\n        <AddEditTaskModal\r\n          setIsAddTaskModalOpen={setIsTaskModalOpen}\r\n          type=\"add\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}