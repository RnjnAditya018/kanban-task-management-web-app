{"ast":null,"code":"var _jsxFileName = \"D:\\\\task management app\\\\kanban-task-management-web-app\\\\src\\\\components\\\\HeaderDropdown.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport boardIcon from \"../assets/icon-board.svg\";\nimport darkIcon from \"../assets/icon-dark-theme.svg\";\nimport lightIcon from \"../assets/icon-light-theme.svg\";\nimport boardsSlice from \"../redux/boardsSlice\";\nimport themeSlice from \"../redux/themeSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HeaderDropdown({\n  setOpenDropdown,\n  setIsBoardModalOpen\n}) {\n  _s();\n  const dispatch = useDispatch();\n  const boards = useSelector(state => state.boards);\n  const theme = useSelector(state => state.theme);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown-container\",\n    onClick: e => {\n      if (e.target !== e.currentTarget) {\n        return;\n      }\n      setOpenDropdown(false);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"ALL BOARDS (\", boards.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-boards\",\n        children: [boards.map((board, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `dropdown-board ${board.isActive ? \"board-active\" : \"\"}`,\n            onClick: () => {\n              dispatch(boardsSlice.actions.setBoardActive({\n                index\n              }));\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"filter-white\",\n              src: boardIcon,\n              alt: \"board\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), \" \", board.name]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-board dropdown-create-board-btn\",\n          onClick: () => {\n            setIsBoardModalOpen(true);\n            setOpenDropdown && setOpenDropdown(state => !state);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"filter-purple\",\n            alt: \"board\",\n            src: boardIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), \" + Create New Board\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"theme-toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: lightIcon,\n          alt: \"sun indicating light mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: theme === \"dark\",\n            onChange: () => dispatch(themeSlice.actions.toggleTheme())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"slider round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: darkIcon,\n          alt: \"moon indicating dark mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(HeaderDropdown, \"NgLzAOBLNzdo0CGTyBs+ztrn878=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = HeaderDropdown;\nvar _c;\n$RefreshReg$(_c, \"HeaderDropdown\");","map":{"version":3,"names":["React","useDispatch","useSelector","boardIcon","darkIcon","lightIcon","boardsSlice","themeSlice","jsxDEV","_jsxDEV","HeaderDropdown","setOpenDropdown","setIsBoardModalOpen","_s","dispatch","boards","state","theme","className","onClick","e","target","currentTarget","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","board","index","isActive","actions","setBoardActive","src","alt","name","type","checked","onChange","toggleTheme","_c","$RefreshReg$"],"sources":["D:/task management app/kanban-task-management-web-app/src/components/HeaderDropdown.js"],"sourcesContent":["import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport boardIcon from \"../assets/icon-board.svg\";\r\nimport darkIcon from \"../assets/icon-dark-theme.svg\";\r\nimport lightIcon from \"../assets/icon-light-theme.svg\";\r\nimport boardsSlice from \"../redux/boardsSlice\";\r\nimport themeSlice from \"../redux/themeSlice\";\r\n\r\nexport default function HeaderDropdown({\r\n  setOpenDropdown,\r\n  setIsBoardModalOpen,\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const boards = useSelector((state) => state.boards);\r\n  const theme = useSelector((state) => state.theme);\r\n\r\n  return (\r\n    <div\r\n      className=\"dropdown-container\"\r\n      onClick={(e) => {\r\n        if (e.target !== e.currentTarget) {\r\n          return;\r\n        }\r\n        setOpenDropdown(false);\r\n      }}\r\n    >\r\n      <div className=\"dropdown-modal\">\r\n        <h3>ALL BOARDS ({boards.length})</h3>\r\n        <div className=\"dropdown-boards\">\r\n          {boards.map((board, index) => {\r\n            return (\r\n              <div\r\n                className={`dropdown-board ${\r\n                  board.isActive ? \"board-active\" : \"\"\r\n                }`}\r\n                key={index}\r\n                onClick={() => {\r\n                  dispatch(boardsSlice.actions.setBoardActive({ index }));\r\n                }}\r\n              >\r\n                <img className=\"filter-white\" src={boardIcon} alt=\"board\" />{\" \"}\r\n                {board.name}\r\n              </div>\r\n            );\r\n          })}\r\n          <div\r\n            className=\"dropdown-board dropdown-create-board-btn\"\r\n            onClick={() => {\r\n              setIsBoardModalOpen(true);\r\n              setOpenDropdown && setOpenDropdown((state) => !state);\r\n            }}\r\n          >\r\n            <img className=\"filter-purple\" alt=\"board\" src={boardIcon} /> +\r\n            Create New Board\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"theme-toggle\">\r\n          <img src={lightIcon} alt=\"sun indicating light mode\" />\r\n          <label className=\"switch\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={theme === \"dark\"}\r\n              onChange={() => dispatch(themeSlice.actions.toggleTheme())}\r\n            />\r\n            <span className=\"slider round\"></span>\r\n          </label>\r\n          <img src={darkIcon} alt=\"moon indicating dark mode\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}