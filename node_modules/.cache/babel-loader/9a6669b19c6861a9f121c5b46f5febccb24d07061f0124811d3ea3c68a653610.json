{"ast":null,"code":"import React from\"react\";import{useDispatch,useSelector}from\"react-redux\";import boardIcon from\"../assets/icon-board.svg\";import darkIcon from\"../assets/icon-dark-theme.svg\";import lightIcon from\"../assets/icon-light-theme.svg\";import boardsSlice from\"../redux/boardsSlice\";import themeSlice from\"../redux/themeSlice\";import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";export default function HeaderDropdown(_ref){let{setOpenDropdown,setIsBoardModalOpen}=_ref;const dispatch=useDispatch();const boards=useSelector(state=>state.boards);const theme=useSelector(state=>state.theme);return/*#__PURE__*/_jsx(\"div\",{className:\"dropdown-container\",onClick:e=>{if(e.target!==e.currentTarget){return;}setOpenDropdown(false);},children:/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown-modal\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"ALL BOARDS (\",boards.length,\")\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown-boards\",children:[boards.map((board,index)=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown-board \".concat(board.isActive?\"board-active\":\"\"),onClick:()=>{dispatch(boardsSlice.actions.setBoardActive({index}));},children:[/*#__PURE__*/_jsx(\"img\",{className:\"filter-white\",src:boardIcon,alt:\"board\"}),\" \",board.name]},index);}),/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown-board dropdown-create-board-btn\",onClick:()=>{setIsBoardModalOpen(true);setOpenDropdown&&setOpenDropdown(state=>!state);},children:[/*#__PURE__*/_jsx(\"img\",{className:\"filter-purple\",alt:\"board\",src:boardIcon}),\" + Create New Board\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"theme-toggle\",children:[/*#__PURE__*/_jsx(\"img\",{src:lightIcon,alt:\"sun indicating light mode\"}),/*#__PURE__*/_jsxs(\"label\",{className:\"switch\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:theme===\"dark\",onChange:()=>dispatch(themeSlice.actions.toggleTheme())}),/*#__PURE__*/_jsx(\"span\",{className:\"slider round\"})]}),/*#__PURE__*/_jsx(\"img\",{src:darkIcon,alt:\"moon indicating dark mode\"})]})]})});}","map":{"version":3,"names":["React","useDispatch","useSelector","boardIcon","darkIcon","lightIcon","boardsSlice","themeSlice","jsxs","_jsxs","jsx","_jsx","HeaderDropdown","_ref","setOpenDropdown","setIsBoardModalOpen","dispatch","boards","state","theme","className","onClick","e","target","currentTarget","children","length","map","board","index","concat","isActive","actions","setBoardActive","src","alt","name","type","checked","onChange","toggleTheme"],"sources":["D:/task management app/kanban-task-management-web-app/src/components/HeaderDropdown.js"],"sourcesContent":["import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport boardIcon from \"../assets/icon-board.svg\";\r\nimport darkIcon from \"../assets/icon-dark-theme.svg\";\r\nimport lightIcon from \"../assets/icon-light-theme.svg\";\r\nimport boardsSlice from \"../redux/boardsSlice\";\r\nimport themeSlice from \"../redux/themeSlice\";\r\n\r\nexport default function HeaderDropdown({\r\n  setOpenDropdown,\r\n  setIsBoardModalOpen,\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const boards = useSelector((state) => state.boards);\r\n  const theme = useSelector((state) => state.theme);\r\n\r\n  return (\r\n    <div\r\n      className=\"dropdown-container\"\r\n      onClick={(e) => {\r\n        if (e.target !== e.currentTarget) {\r\n          return;\r\n        }\r\n        setOpenDropdown(false);\r\n      }}\r\n    >\r\n      <div className=\"dropdown-modal\">\r\n        <h3>ALL BOARDS ({boards.length})</h3>\r\n        <div className=\"dropdown-boards\">\r\n          {boards.map((board, index) => {\r\n            return (\r\n              <div\r\n                className={`dropdown-board ${\r\n                  board.isActive ? \"board-active\" : \"\"\r\n                }`}\r\n                key={index}\r\n                onClick={() => {\r\n                  dispatch(boardsSlice.actions.setBoardActive({ index }));\r\n                }}\r\n              >\r\n                <img className=\"filter-white\" src={boardIcon} alt=\"board\" />{\" \"}\r\n                {board.name}\r\n              </div>\r\n            );\r\n          })}\r\n          <div\r\n            className=\"dropdown-board dropdown-create-board-btn\"\r\n            onClick={() => {\r\n              setIsBoardModalOpen(true);\r\n              setOpenDropdown && setOpenDropdown((state) => !state);\r\n            }}\r\n          >\r\n            <img className=\"filter-purple\" alt=\"board\" src={boardIcon} /> +\r\n            Create New Board\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"theme-toggle\">\r\n          <img src={lightIcon} alt=\"sun indicating light mode\" />\r\n          <label className=\"switch\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={theme === \"dark\"}\r\n              onChange={() => dispatch(themeSlice.actions.toggleTheme())}\r\n            />\r\n            <span className=\"slider round\"></span>\r\n          </label>\r\n          <img src={darkIcon} alt=\"moon indicating dark mode\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}