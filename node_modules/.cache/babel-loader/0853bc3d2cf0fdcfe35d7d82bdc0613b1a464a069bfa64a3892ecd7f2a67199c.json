{"ast":null,"code":"import React,{useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import\"../styles/TaskModals.css\";import Subtask from\"../components/Subtask\";import ElipsisMenu from\"../components/ElipsisMenu\";import DeleteModal from\"./DeleteModal\";import elipsis from\"../assets/icon-vertical-ellipsis.svg\";import boardsSlice from\"../redux/boardsSlice\";import AddEditTaskModal from\"./AddEditTaskModal\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function TaskModal(_ref){let{taskIndex,colIndex,setIsTaskModalOpen}=_ref;const dispatch=useDispatch();const[isElipsisMenuOpen,setIsElipsisMenuOpen]=useState(false);const[isDeleteModalOpen,setIsDeleteModalOpen]=useState(false);const boards=useSelector(state=>state.boards);const board=boards.find(board=>board.isActive===true);const columns=board.columns;const col=columns.find((col,i)=>i===colIndex);const task=col.tasks.find((task,i)=>i===taskIndex);const subtasks=task.subtasks;let completed=0;subtasks.forEach(subtask=>{if(subtask.isCompleted){completed++;}});const[status,setStatus]=useState(task.status);const[newColIndex,setNewColIndex]=useState(columns.indexOf(col));const onChange=e=>{setStatus(e.target.value);setNewColIndex(e.target.selectedIndex);};const onClose=e=>{if(e.target!==e.currentTarget){return;}dispatch(boardsSlice.actions.setTaskStatus({taskIndex,colIndex,newColIndex,status}));setIsTaskModalOpen(false);};const onDeleteBtnClick=e=>{if(e.target.textContent===\"Delete\"){dispatch(boardsSlice.actions.deleteTask({taskIndex,colIndex}));setIsTaskModalOpen(false);setIsDeleteModalOpen(false);}else{setIsDeleteModalOpen(false);}};const[isAddTaskModalOpen,setIsAddTaskModalOpen]=useState(false);const setOpenEditModal=()=>{setIsAddTaskModalOpen(true);setIsElipsisMenuOpen(false);};const setOpenDeleteModal=()=>{setIsElipsisMenuOpen(false);setIsDeleteModalOpen(true);};return/*#__PURE__*/_jsxs(\"div\",{className:\"modal-container \".concat(!isDeleteModalOpen&&\"dimmed\"),onClick:onClose,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"task-modal \".concat(isDeleteModalOpen&&\"none\"),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"task-modal-title-container\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"heading-L\",children:task.title}),/*#__PURE__*/_jsx(\"img\",{className:\"task-modal-elipsis\",src:elipsis,alt:\"task options btn\",onClick:()=>setIsElipsisMenuOpen(prevState=>!prevState)}),isElipsisMenuOpen&&/*#__PURE__*/_jsx(ElipsisMenu,{setOpenEditModal:setOpenEditModal,setOpenDeleteModal:setOpenDeleteModal,type:\"Task\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"task-description text-L\",children:task.description}),/*#__PURE__*/_jsxs(\"p\",{className:\"subtasks-completed heading-S\",children:[\"Subtasks (\",completed,\" of \",subtasks.length,\")\"]}),subtasks.map((subtask,index)=>{return/*#__PURE__*/_jsx(Subtask,{index:index,taskIndex:taskIndex,colIndex:colIndex},index);}),/*#__PURE__*/_jsxs(\"div\",{className:\"select-column-container\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"text-M\",children:\"Current Status\"}),/*#__PURE__*/_jsx(\"select\",{className:\"select-status text-L\",value:status,onChange:onChange,children:columns.map((col,index)=>/*#__PURE__*/_jsx(\"option\",{className:\"status-options\",children:col.name},index))})]})]}),isDeleteModalOpen&&/*#__PURE__*/_jsx(DeleteModal,{onDeleteBtnClick:onDeleteBtnClick,type:\"task\",title:task.title}),isAddTaskModalOpen&&/*#__PURE__*/_jsx(AddEditTaskModal,{setIsAddTaskModalOpen:setIsAddTaskModalOpen,setIsTaskModalOpen:setIsTaskModalOpen,type:\"edit\",taskIndex:taskIndex,prevColIndex:colIndex})]});}","map":{"version":3,"names":["React","useState","useDispatch","useSelector","Subtask","ElipsisMenu","DeleteModal","elipsis","boardsSlice","AddEditTaskModal","jsx","_jsx","jsxs","_jsxs","TaskModal","_ref","taskIndex","colIndex","setIsTaskModalOpen","dispatch","isElipsisMenuOpen","setIsElipsisMenuOpen","isDeleteModalOpen","setIsDeleteModalOpen","boards","state","board","find","isActive","columns","col","i","task","tasks","subtasks","completed","forEach","subtask","isCompleted","status","setStatus","newColIndex","setNewColIndex","indexOf","onChange","e","target","value","selectedIndex","onClose","currentTarget","actions","setTaskStatus","onDeleteBtnClick","textContent","deleteTask","isAddTaskModalOpen","setIsAddTaskModalOpen","setOpenEditModal","setOpenDeleteModal","className","concat","onClick","children","title","src","alt","prevState","type","description","length","map","index","name","prevColIndex"],"sources":["D:/task management app/zidio-task-management-web-app/src/modals/TaskModal.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../styles/TaskModals.css\";\r\nimport Subtask from \"../components/Subtask\";\r\nimport ElipsisMenu from \"../components/ElipsisMenu\";\r\nimport DeleteModal from \"./DeleteModal\";\r\nimport elipsis from \"../assets/icon-vertical-ellipsis.svg\";\r\nimport boardsSlice from \"../redux/boardsSlice\";\r\nimport AddEditTaskModal from \"./AddEditTaskModal\";\r\n\r\nexport default function TaskModal({ taskIndex, colIndex, setIsTaskModalOpen}) {\r\n  const dispatch = useDispatch();\r\n  const [isElipsisMenuOpen, setIsElipsisMenuOpen] = useState(false);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const boards = useSelector((state) => state.boards);\r\n  const board = boards.find((board) => board.isActive === true);\r\n  const columns = board.columns;\r\n  const col = columns.find((col, i) => i === colIndex);\r\n  const task = col.tasks.find((task, i) => i === taskIndex);\r\n  const subtasks = task.subtasks;\r\n\r\n  let completed = 0;\r\n  subtasks.forEach((subtask) => {\r\n    if (subtask.isCompleted) {\r\n      completed++;\r\n    }\r\n  });\r\n\r\n  const [status, setStatus] = useState(task.status);\r\n  const [newColIndex, setNewColIndex] = useState(columns.indexOf(col));\r\n  const onChange = (e) => {\r\n    setStatus(e.target.value);\r\n    setNewColIndex(e.target.selectedIndex);\r\n  };\r\n\r\n  const onClose = (e) => {\r\n    if (e.target !== e.currentTarget) {\r\n      return;\r\n    }\r\n    dispatch(\r\n      boardsSlice.actions.setTaskStatus({\r\n        taskIndex,\r\n        colIndex,\r\n        newColIndex,\r\n        status,\r\n      })\r\n    );\r\n    setIsTaskModalOpen(false)\r\n  };\r\n\r\n  const onDeleteBtnClick = (e) => {\r\n    if (e.target.textContent === \"Delete\") {\r\n      dispatch(boardsSlice.actions.deleteTask({ taskIndex, colIndex }));\r\n      setIsTaskModalOpen(false)\r\n      setIsDeleteModalOpen(false)\r\n    } else {\r\n      setIsDeleteModalOpen(false)\r\n    }\r\n  };\r\n\r\n  const [isAddTaskModalOpen, setIsAddTaskModalOpen] = useState(false);\r\n\r\n  const setOpenEditModal = () => {\r\n    setIsAddTaskModalOpen(true);\r\n    setIsElipsisMenuOpen(false)\r\n  };\r\n\r\n  const setOpenDeleteModal = () => {\r\n    setIsElipsisMenuOpen(false)\r\n    setIsDeleteModalOpen(true)\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`modal-container ${!isDeleteModalOpen && \"dimmed\"}`}\r\n      onClick={onClose}\r\n    >\r\n      <div className={`task-modal ${isDeleteModalOpen && \"none\"}`}>\r\n        <div className=\"task-modal-title-container\">\r\n          <p className=\"heading-L\">{task.title}</p>\r\n          <img\r\n            className=\"task-modal-elipsis\"\r\n            src={elipsis}\r\n            alt=\"task options btn\"\r\n            onClick={() =>\r\n              setIsElipsisMenuOpen((prevState) => !prevState)\r\n            }\r\n          />\r\n          {isElipsisMenuOpen && (\r\n            <ElipsisMenu\r\n              setOpenEditModal={setOpenEditModal}\r\n              setOpenDeleteModal={setOpenDeleteModal}\r\n              type=\"Task\"\r\n            />\r\n          )}\r\n        </div>\r\n        <p className=\"task-description text-L\">{task.description}</p>\r\n\r\n        <p className=\"subtasks-completed heading-S\">\r\n          Subtasks ({completed} of {subtasks.length})\r\n        </p>\r\n        {subtasks.map((subtask, index) => {\r\n          return (\r\n            <Subtask\r\n              index={index}\r\n              taskIndex={taskIndex}\r\n              colIndex={colIndex}\r\n              key={index}\r\n            />\r\n          );\r\n        })}\r\n\r\n        <div className=\"select-column-container\">\r\n          <label className=\"text-M\">Current Status</label>\r\n          <select\r\n            className=\"select-status text-L\"\r\n            value={status}\r\n            onChange={onChange}\r\n          >\r\n            {columns.map((col, index) => (\r\n              <option className=\"status-options\" key={index}>{col.name}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {isDeleteModalOpen && (\r\n        <DeleteModal\r\n          onDeleteBtnClick={onDeleteBtnClick}\r\n          type=\"task\"\r\n          title={task.title}\r\n        />\r\n      )}\r\n\r\n      {isAddTaskModalOpen && (\r\n        <AddEditTaskModal\r\n          setIsAddTaskModalOpen={setIsAddTaskModalOpen}\r\n          setIsTaskModalOpen={setIsTaskModalOpen}\r\n          type=\"edit\"\r\n          taskIndex={taskIndex}\r\n          prevColIndex={colIndex}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}