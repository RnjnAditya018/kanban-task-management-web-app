{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";import data from\"../data.json\";const boardsSlice=createSlice({name:\"boards\",initialState:data.boards,reducers:{addBoard:(state,action)=>{const isActive=state.length>0?false:true;const payload=action.payload;const board={name:payload.name,isActive,columns:[]};board.columns=payload.newColumns;state.push(board);},editBoard:(state,action)=>{const payload=action.payload;const board=state.find(board=>board.isActive);board.name=payload.name;board.columns=payload.newColumns;},deleteBoard:state=>{const board=state.find(board=>board.isActive);state.splice(state.indexOf(board),1);},setBoardActive:(state,action)=>{state.map((board,index)=>{index===action.payload.index?board.isActive=true:board.isActive=false;return board;});},addTask:(state,action)=>{const{title,status,description,subtasks,newColIndex}=action.payload;const task={title,description,subtasks,status};const board=state.find(board=>board.isActive);const column=board.columns.find((col,index)=>index===newColIndex);column.tasks.push(task);},editTask:(state,action)=>{const{title,status,description,subtasks,prevColIndex,newColIndex,taskIndex}=action.payload;const board=state.find(board=>board.isActive);const column=board.columns.find((col,index)=>index===prevColIndex);const task=column.tasks.find((task,index)=>index===taskIndex);task.title=title;task.status=status;task.description=description;task.subtasks=subtasks;if(prevColIndex===newColIndex)return;column.tasks=column.tasks.filter((task,index)=>index!==taskIndex);const newCol=board.columns.find((col,index)=>index===newColIndex);newCol.tasks.push(task);},dragTask:(state,action)=>{const{colIndex,prevColIndex,taskIndex}=action.payload;const board=state.find(board=>board.isActive);const prevCol=board.columns.find((col,i)=>i===prevColIndex);const task=prevCol.tasks.splice(taskIndex,1)[0];board.columns.find((col,i)=>i===colIndex).tasks.push(task);},setSubtaskCompleted:(state,action)=>{const payload=action.payload;const board=state.find(board=>board.isActive);const col=board.columns.find((col,i)=>i===payload.colIndex);const task=col.tasks.find((task,i)=>i===payload.taskIndex);const subtask=task.subtasks.find((subtask,i)=>i===payload.index);subtask.isCompleted=!subtask.isCompleted;},setTaskStatus:(state,action)=>{const payload=action.payload;const board=state.find(board=>board.isActive);const columns=board.columns;const col=columns.find((col,i)=>i===payload.colIndex);if(payload.colIndex===payload.newColIndex)return;const task=col.tasks.find((task,i)=>i===payload.taskIndex);task.status=payload.status;col.tasks=col.tasks.filter((task,i)=>i!==payload.taskIndex);const newCol=columns.find((col,i)=>i===payload.newColIndex);newCol.tasks.push(task);},deleteTask:(state,action)=>{const payload=action.payload;const board=state.find(board=>board.isActive);const col=board.columns.find((col,i)=>i===payload.colIndex);col.tasks=col.tasks.filter((task,i)=>i!==payload.taskIndex);}}});export default boardsSlice;","map":{"version":3,"names":["createSlice","data","boardsSlice","name","initialState","boards","reducers","addBoard","state","action","isActive","length","payload","board","columns","newColumns","push","editBoard","find","deleteBoard","splice","indexOf","setBoardActive","map","index","addTask","title","status","description","subtasks","newColIndex","task","column","col","tasks","editTask","prevColIndex","taskIndex","filter","newCol","dragTask","colIndex","prevCol","i","setSubtaskCompleted","subtask","isCompleted","setTaskStatus","deleteTask"],"sources":["D:/task management app/zidio-task-management-web-app/src/redux/boardsSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport data from \"../data.json\";\r\n\r\nconst boardsSlice = createSlice({\r\n  name: \"boards\",\r\n  initialState: data.boards,\r\n  reducers: {\r\n    addBoard: (state, action) => {\r\n      const isActive = state.length > 0 ? false : true;\r\n      const payload = action.payload;\r\n      const board = {\r\n        name: payload.name,\r\n        isActive,\r\n        columns: [],\r\n      };\r\n      board.columns = payload.newColumns;\r\n      state.push(board);\r\n    },\r\n    editBoard: (state, action) => {\r\n      const payload = action.payload;\r\n      const board = state.find((board) => board.isActive);\r\n      board.name = payload.name;\r\n      board.columns = payload.newColumns;\r\n    },\r\n    deleteBoard: (state) => {\r\n      const board = state.find((board) => board.isActive);\r\n      state.splice(state.indexOf(board), 1);\r\n    },\r\n    setBoardActive: (state, action) => {\r\n      state.map((board, index) => {\r\n        index === action.payload.index\r\n          ? (board.isActive = true)\r\n          : (board.isActive = false);\r\n        return board;\r\n      });\r\n    },\r\n    addTask: (state, action) => {\r\n      const { title, status, description, subtasks, newColIndex } =\r\n        action.payload;\r\n      const task = { title, description, subtasks, status };\r\n      const board = state.find((board) => board.isActive);\r\n      const column = board.columns.find((col, index) => index === newColIndex);\r\n      column.tasks.push(task);\r\n    },\r\n    editTask: (state, action) => {\r\n      const {\r\n        title,\r\n        status,\r\n        description,\r\n        subtasks,\r\n        prevColIndex,\r\n        newColIndex,\r\n        taskIndex,\r\n      } = action.payload;\r\n      const board = state.find((board) => board.isActive);\r\n      const column = board.columns.find((col, index) => index === prevColIndex);\r\n      const task = column.tasks.find((task, index) => index === taskIndex);\r\n      task.title = title;\r\n      task.status = status;\r\n      task.description = description;\r\n      task.subtasks = subtasks;\r\n      if (prevColIndex === newColIndex) return;\r\n      column.tasks = column.tasks.filter((task, index) => index !== taskIndex);\r\n      const newCol = board.columns.find((col, index) => index === newColIndex);\r\n      newCol.tasks.push(task);\r\n    },\r\n    dragTask: (state, action) => {\r\n      const { colIndex, prevColIndex, taskIndex } = action.payload;\r\n      const board = state.find((board) => board.isActive);\r\n      const prevCol = board.columns.find((col, i) => i === prevColIndex);\r\n      const task = prevCol.tasks.splice(taskIndex, 1)[0];\r\n      board.columns.find((col, i) => i === colIndex).tasks.push(task);\r\n    },\r\n    setSubtaskCompleted: (state, action) => {\r\n      const payload = action.payload;\r\n      const board = state.find((board) => board.isActive);\r\n      const col = board.columns.find((col, i) => i === payload.colIndex);\r\n      const task = col.tasks.find((task, i) => i === payload.taskIndex);\r\n      const subtask = task.subtasks.find((subtask, i) => i === payload.index);\r\n      subtask.isCompleted = !subtask.isCompleted;\r\n    },\r\n    setTaskStatus: (state, action) => {\r\n      const payload = action.payload;\r\n      const board = state.find((board) => board.isActive);\r\n      const columns = board.columns;\r\n      const col = columns.find((col, i) => i === payload.colIndex);\r\n      if (payload.colIndex === payload.newColIndex) return;\r\n      const task = col.tasks.find((task, i) => i === payload.taskIndex);\r\n      task.status = payload.status;\r\n      col.tasks = col.tasks.filter((task, i) => i !== payload.taskIndex);\r\n      const newCol = columns.find((col, i) => i === payload.newColIndex);\r\n      newCol.tasks.push(task);\r\n    },\r\n    deleteTask: (state, action) => {\r\n      const payload = action.payload;\r\n      const board = state.find((board) => board.isActive);\r\n      const col = board.columns.find((col, i) => i === payload.colIndex);\r\n      col.tasks = col.tasks.filter((task, i) => i !== payload.taskIndex);\r\n    },\r\n  },\r\n});\r\n\r\nexport default boardsSlice;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}