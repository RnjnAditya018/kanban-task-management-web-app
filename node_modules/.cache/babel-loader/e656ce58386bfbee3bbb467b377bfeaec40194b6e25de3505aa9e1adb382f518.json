{"ast":null,"code":"import React,{useState}from\"react\";import{useSelector}from\"react-redux\";import{useMediaQuery}from\"react-responsive\";import AddEditBoardModal from\"../modals/AddEditBoardModal\";import\"../styles/Board.css\";import Column from\"./Column\";import EmptyBoard from\"./EmptyBoard\";import Sidebar from\"./Sidebar\";import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Board(){const isBigScreen=useMediaQuery({query:\"(min-width: 768px)\"});const[isSideBarOpen,setIsSideBarOpen]=useState(true);const[isBoardModalOpen,setIsBoardModalOpen]=useState(false);const boards=useSelector(state=>state.boards);const board=boards.find(board=>board.isActive===true);const columns=board.columns;return/*#__PURE__*/_jsxs(\"div\",{className:isBigScreen&&isSideBarOpen?\"board open-sidebar\":\"board\",children:[isBigScreen&&/*#__PURE__*/_jsx(Sidebar,{isSideBarOpen:isSideBarOpen,setIsSideBarOpen:setIsSideBarOpen}),columns.length>0?/*#__PURE__*/_jsxs(_Fragment,{children:[columns.map((col,index)=>{return/*#__PURE__*/_jsx(Column,{colIndex:index},index);}),/*#__PURE__*/_jsx(\"div\",{className:\"add-column-column heading-XL\",onClick:()=>{setIsBoardModalOpen(true);},children:\"+ New Column\"})]}):/*#__PURE__*/_jsx(EmptyBoard,{type:\"edit\"}),isBoardModalOpen&&/*#__PURE__*/_jsx(AddEditBoardModal,{type:\"edit\",setIsBoardModalOpen:setIsBoardModalOpen})]});}","map":{"version":3,"names":["React","useState","useSelector","useMediaQuery","AddEditBoardModal","Column","EmptyBoard","Sidebar","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Board","isBigScreen","query","isSideBarOpen","setIsSideBarOpen","isBoardModalOpen","setIsBoardModalOpen","boards","state","board","find","isActive","columns","className","children","length","map","col","index","colIndex","onClick","type"],"sources":["D:/task management app/kanban-task-management-web-app/src/components/Board.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport AddEditBoardModal from \"../modals/AddEditBoardModal\";\r\nimport \"../styles/Board.css\";\r\nimport Column from \"./Column\";\r\nimport EmptyBoard from \"./EmptyBoard\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nexport default function Board() {\r\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 768px)\" });\r\n  const [isSideBarOpen, setIsSideBarOpen] = useState(true);\r\n  const [isBoardModalOpen, setIsBoardModalOpen] = useState(false);\r\n  const boards = useSelector((state) => state.boards);\r\n  const board = boards.find((board) => board.isActive === true);\r\n  const columns = board.columns;\r\n\r\n  return (\r\n    <div\r\n      className={isBigScreen && isSideBarOpen ? \"board open-sidebar\" : \"board\"}\r\n    >\r\n      {isBigScreen && (\r\n        <Sidebar\r\n          isSideBarOpen={isSideBarOpen}\r\n          setIsSideBarOpen={setIsSideBarOpen}\r\n        />\r\n      )}\r\n\r\n      {columns.length > 0 ? (\r\n        <>\r\n          {columns.map((col, index) => {\r\n            return <Column key={index} colIndex={index} />;\r\n          })}\r\n          <div\r\n            className=\"add-column-column heading-XL\"\r\n            onClick={() => {\r\n              setIsBoardModalOpen(true);\r\n            }}\r\n          >\r\n            + New Column\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <EmptyBoard type=\"edit\" />\r\n      )}\r\n      {isBoardModalOpen && <AddEditBoardModal type=\"edit\" setIsBoardModalOpen={setIsBoardModalOpen} />}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,aAAa,CACzC,OAASC,aAAa,KAAQ,kBAAkB,CAChD,MAAO,CAAAC,iBAAiB,KAAM,6BAA6B,CAC3D,MAAO,qBAAqB,CAC5B,MAAO,CAAAC,MAAM,KAAM,UAAU,CAC7B,MAAO,CAAAC,UAAU,KAAM,cAAc,CACrC,MAAO,CAAAC,OAAO,KAAM,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhC,cAAe,SAAS,CAAAC,KAAKA,CAAA,CAAG,CAC9B,KAAM,CAAAC,WAAW,CAAGZ,aAAa,CAAC,CAAEa,KAAK,CAAE,oBAAqB,CAAC,CAAC,CAClE,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CACxD,KAAM,CAACkB,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGnB,QAAQ,CAAC,KAAK,CAAC,CAC/D,KAAM,CAAAoB,MAAM,CAAGnB,WAAW,CAAEoB,KAAK,EAAKA,KAAK,CAACD,MAAM,CAAC,CACnD,KAAM,CAAAE,KAAK,CAAGF,MAAM,CAACG,IAAI,CAAED,KAAK,EAAKA,KAAK,CAACE,QAAQ,GAAK,IAAI,CAAC,CAC7D,KAAM,CAAAC,OAAO,CAAGH,KAAK,CAACG,OAAO,CAE7B,mBACEb,KAAA,QACEc,SAAS,CAAEZ,WAAW,EAAIE,aAAa,CAAG,oBAAoB,CAAG,OAAQ,CAAAW,QAAA,EAExEb,WAAW,eACVN,IAAA,CAACF,OAAO,EACNU,aAAa,CAAEA,aAAc,CAC7BC,gBAAgB,CAAEA,gBAAiB,CACpC,CACF,CAEAQ,OAAO,CAACG,MAAM,CAAG,CAAC,cACjBhB,KAAA,CAAAF,SAAA,EAAAiB,QAAA,EACGF,OAAO,CAACI,GAAG,CAAC,CAACC,GAAG,CAAEC,KAAK,GAAK,CAC3B,mBAAOvB,IAAA,CAACJ,MAAM,EAAa4B,QAAQ,CAAED,KAAM,EAAvBA,KAAyB,CAAC,CAChD,CAAC,CAAC,cACFvB,IAAA,QACEkB,SAAS,CAAC,8BAA8B,CACxCO,OAAO,CAAEA,CAAA,GAAM,CACbd,mBAAmB,CAAC,IAAI,CAAC,CAC3B,CAAE,CAAAQ,QAAA,CACH,cAED,CAAK,CAAC,EACN,CAAC,cAEHnB,IAAA,CAACH,UAAU,EAAC6B,IAAI,CAAC,MAAM,CAAE,CAC1B,CACAhB,gBAAgB,eAAIV,IAAA,CAACL,iBAAiB,EAAC+B,IAAI,CAAC,MAAM,CAACf,mBAAmB,CAAEA,mBAAoB,CAAE,CAAC,EAC7F,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}