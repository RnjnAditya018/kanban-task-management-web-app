{"ast":null,"code":"import _objectSpread from\"D:/task management app/kanban-task-management-web-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import crossIcon from\"../assets/icon-cross.svg\";import boardsSlice from\"../redux/boardsSlice\";import\"../styles/BoardModals.css\";import{v4 as uuidv4}from\"uuid\";import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";export default function AddEditBoardModal(_ref){let{type,setIsBoardModalOpen}=_ref;const dispatch=useDispatch();const[isFirstLoad,setIsFirstLoad]=useState(true);const[name,setName]=useState(\"\");const[newColumns,setNewColumns]=useState([{name:\"Todo\",tasks:[],id:uuidv4()},{name:\"Doing\",tasks:[],id:uuidv4()}]);const[isValid,setIsValid]=useState(true);const board=useSelector(state=>state.boards).find(board=>board.isActive);if(type===\"edit\"&&isFirstLoad){setNewColumns(board.columns.map(col=>{return _objectSpread(_objectSpread({},col),{},{id:uuidv4()});}));setName(board.name);setIsFirstLoad(false);}const validate=()=>{setIsValid(false);if(!name.trim()){return false;}for(let i=0;i<newColumns.length;i++){if(!newColumns[i].name.trim()){return false;}}setIsValid(true);return true;};const onChange=(id,newValue)=>{setNewColumns(prevState=>{const newState=[...prevState];const column=newState.find(col=>col.id===id);column.name=newValue;return newState;});};const onDelete=id=>{setNewColumns(prevState=>prevState.filter(el=>el.id!==id));};const onSubmit=type=>{setIsBoardModalOpen(false);if(type===\"add\"){dispatch(boardsSlice.actions.addBoard({name,newColumns}));}else{dispatch(boardsSlice.actions.editBoard({name,newColumns}));}};return/*#__PURE__*/_jsx(\"div\",{className:\"modal-container dimmed\",onClick:e=>{if(e.target!==e.currentTarget){return;}setIsBoardModalOpen(false);},children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[type===\"edit\"?\"Edit\":\"Add new\",\" board\"]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"board-name-input\",children:\"Board Name\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"input\",{value:name,onChange:e=>setName(e.target.value),id:\"board-name-input\",type:\"text\",placeholder:\"e.g. Web Design\",className:!isValid&&!name.trim()?\"red-border\":\"\"}),!isValid&&!name.trim()&&/*#__PURE__*/_jsx(\"span\",{className:\"cant-be-empty-span text-L\",children:\" Can't be empty\"})]}),/*#__PURE__*/_jsx(\"label\",{children:\"Board Columns\"}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-columns\",children:newColumns.map((column,index)=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"modal-column\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"input\",{onChange:e=>{onChange(column.id,e.target.value);},type:\"text\",value:column.name,className:!isValid&&!column.name.trim()?\"red-border\":\"\"}),!isValid&&!column.name.trim()&&/*#__PURE__*/_jsxs(\"span\",{className:\"cant-be-empty-span text-L\",children:[\" \",\"Can't be empty\"]})]}),/*#__PURE__*/_jsx(\"img\",{src:crossIcon,alt:\"delete-column-icon\",onClick:()=>{onDelete(column.id);}})]},index);})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setNewColumns(state=>[...state,{name:\"\",tasks:[],id:uuidv4()}]);},className:\"add-column-btn btn-light\",children:\"+ Add New Column\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const isValid=validate();if(isValid===true)onSubmit(type);},className:\"create-btn\",children:type===\"add\"?\"Create New Board\":\"Save Changes\"})]})});}","map":{"version":3,"names":["React","useState","useDispatch","useSelector","crossIcon","boardsSlice","v4","uuidv4","jsxs","_jsxs","jsx","_jsx","AddEditBoardModal","_ref","type","setIsBoardModalOpen","dispatch","isFirstLoad","setIsFirstLoad","name","setName","newColumns","setNewColumns","tasks","id","isValid","setIsValid","board","state","boards","find","isActive","columns","map","col","_objectSpread","validate","trim","i","length","onChange","newValue","prevState","newState","column","onDelete","filter","el","onSubmit","actions","addBoard","editBoard","className","onClick","e","target","currentTarget","children","htmlFor","value","placeholder","index","src","alt"],"sources":["D:/task management app/kanban-task-management-web-app/src/modals/AddEditBoardModal.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport crossIcon from \"../assets/icon-cross.svg\";\r\nimport boardsSlice from \"../redux/boardsSlice\";\r\nimport \"../styles/BoardModals.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport default function AddEditBoardModal({ type, setIsBoardModalOpen }) {\r\n  const dispatch = useDispatch();\r\n  const [isFirstLoad, setIsFirstLoad] = useState(true);\r\n  const [name, setName] = useState(\"\");\r\n  const [newColumns, setNewColumns] = useState([\r\n    { name: \"Todo\", tasks: [], id: uuidv4() },\r\n    { name: \"Doing\", tasks: [], id: uuidv4() },\r\n  ]);\r\n  const [isValid, setIsValid] = useState(true);\r\n  const board = useSelector((state) => state.boards).find(\r\n    (board) => board.isActive\r\n  );\r\n\r\n  if (type === \"edit\" && isFirstLoad) {\r\n    setNewColumns(\r\n      board.columns.map((col) => {\r\n        return { ...col, id: uuidv4() };\r\n      })\r\n    );\r\n    setName(board.name);\r\n    setIsFirstLoad(false);\r\n  }\r\n\r\n  const validate = () => {\r\n    setIsValid(false);\r\n    if (!name.trim()) {\r\n      return false;\r\n    }\r\n    for (let i = 0; i < newColumns.length; i++) {\r\n      if (!newColumns[i].name.trim()) {\r\n        return false;\r\n      }\r\n    }\r\n    setIsValid(true);\r\n    return true;\r\n  };\r\n\r\n  const onChange = (id, newValue) => {\r\n    setNewColumns((prevState) => {\r\n      const newState = [...prevState];\r\n      const column = newState.find((col) => col.id === id);\r\n      column.name = newValue;\r\n      return newState;\r\n    });\r\n  };\r\n\r\n  const onDelete = (id) => {\r\n    setNewColumns((prevState) => prevState.filter((el) => el.id !== id));\r\n  };\r\n\r\n  const onSubmit = (type) => {\r\n    setIsBoardModalOpen(false);\r\n    if (type === \"add\") {\r\n      dispatch(boardsSlice.actions.addBoard({ name, newColumns }));\r\n    } else {\r\n      dispatch(boardsSlice.actions.editBoard({ name, newColumns }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"modal-container dimmed\"\r\n      onClick={(e) => {\r\n        if (e.target !== e.currentTarget) {\r\n          return;\r\n        }\r\n        setIsBoardModalOpen(false);\r\n      }}\r\n    >\r\n      <div className=\"modal\">\r\n        <h3>{type === \"edit\" ? \"Edit\" : \"Add new\"} board</h3>\r\n        <label htmlFor=\"board-name-input\">Board Name</label>\r\n        <div className=\"input-container\">\r\n          <input\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            id=\"board-name-input\"\r\n            type=\"text\"\r\n            placeholder=\"e.g. Web Design\"\r\n            className={!isValid && !name.trim() ? \"red-border\" : \"\"}\r\n          />\r\n          {!isValid && !name.trim() && (\r\n            <span className=\"cant-be-empty-span text-L\"> Can't be empty</span>\r\n          )}\r\n        </div>\r\n\r\n        <label>Board Columns</label>\r\n        <div className=\"modal-columns\">\r\n          {newColumns.map((column, index) => {\r\n            return (\r\n              <div className=\"modal-column\" key={index}>\r\n                <div className=\"input-container\">\r\n                  <input\r\n                    onChange={(e) => {\r\n                      onChange(column.id, e.target.value);\r\n                    }}\r\n                    type=\"text\"\r\n                    value={column.name}\r\n                    className={\r\n                      !isValid && !column.name.trim() ? \"red-border\" : \"\"\r\n                    }\r\n                  />\r\n                  {!isValid && !column.name.trim() && (\r\n                    <span className=\"cant-be-empty-span text-L\">\r\n                      {\" \"}\r\n                      Can't be empty\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <img\r\n                  src={crossIcon}\r\n                  alt=\"delete-column-icon\"\r\n                  onClick={() => {\r\n                    onDelete(column.id);\r\n                  }}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <button\r\n          onClick={() => {\r\n            setNewColumns((state) => [\r\n              ...state,\r\n              { name: \"\", tasks: [], id: uuidv4() },\r\n            ]);\r\n          }}\r\n          className=\"add-column-btn btn-light\"\r\n        >\r\n          + Add New Column\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            const isValid = validate();\r\n            if (isValid === true) onSubmit(type);\r\n          }}\r\n          className=\"create-btn\"\r\n        >\r\n          {type === \"add\" ? \"Create New Board\" : \"Save Changes\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}