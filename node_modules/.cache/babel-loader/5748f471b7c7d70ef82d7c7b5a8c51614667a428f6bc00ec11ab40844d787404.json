{"ast":null,"code":"var _jsxFileName = \"D:\\\\task management app\\\\zidio-task-management-web-app\\\\src\\\\components\\\\Sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/Sidebar.css\";\nimport showSidebarIcon from \"../assets/icon-show-sidebar.svg\";\nimport hideSidebarIcon from \"../assets/icon-hide-sidebar.svg\";\nimport HeaderDropdown from \"./HeaderDropdown\";\nimport AddEditBoardModal from \"../modals/AddEditBoardModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidebar({\n  isSideBarOpen,\n  setIsSideBarOpen\n}) {\n  _s();\n  const [isBoardModalOpen, setIsBoardModalOpen] = useState(false);\n  const toggleSidebar = () => {\n    setIsSideBarOpen(curr => !curr);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `sidebar  ${!isSideBarOpen && \"sidebar-closed\"} ${isBoardModalOpen && 'sidebar-infront'}`,\n    children: [isSideBarOpen && /*#__PURE__*/_jsxDEV(HeaderDropdown, {\n      setIsBoardModalOpen: setIsBoardModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `toggle-sidebar-container  ${!isSideBarOpen && \"toggle-closed\"}`,\n      onClick: () => toggleSidebar(),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: isSideBarOpen ? hideSidebarIcon : showSidebarIcon,\n        alt: \"show/hide sidebar icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), isSideBarOpen && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"heading-M\",\n        children: \"Hide Sidebar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), isBoardModalOpen && /*#__PURE__*/_jsxDEV(AddEditBoardModal, {\n      type: \"add\",\n      setIsBoardModalOpen: setIsBoardModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(Sidebar, \"dSbB9OyUm0MKeRWHBtKfv4rzzzE=\");\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","showSidebarIcon","hideSidebarIcon","HeaderDropdown","AddEditBoardModal","jsxDEV","_jsxDEV","Sidebar","isSideBarOpen","setIsSideBarOpen","_s","isBoardModalOpen","setIsBoardModalOpen","toggleSidebar","curr","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","type","_c","$RefreshReg$"],"sources":["D:/task management app/zidio-task-management-web-app/src/components/Sidebar.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/Sidebar.css\";\r\nimport showSidebarIcon from \"../assets/icon-show-sidebar.svg\";\r\nimport hideSidebarIcon from \"../assets/icon-hide-sidebar.svg\";\r\nimport HeaderDropdown from \"./HeaderDropdown\";\r\nimport AddEditBoardModal from \"../modals/AddEditBoardModal\";\r\n\r\nexport default function Sidebar({ isSideBarOpen, setIsSideBarOpen }) {\r\n  const [isBoardModalOpen, setIsBoardModalOpen] = useState(false);\r\n  const toggleSidebar = () => {\r\n    setIsSideBarOpen((curr) => !curr);\r\n  };\r\n\r\n  return (\r\n    <div className={`sidebar  ${!isSideBarOpen && \"sidebar-closed\"} ${isBoardModalOpen && 'sidebar-infront'}`}>\r\n      {isSideBarOpen && <HeaderDropdown setIsBoardModalOpen={setIsBoardModalOpen} />}\r\n      <div\r\n        className={`toggle-sidebar-container  ${\r\n          !isSideBarOpen && \"toggle-closed\"\r\n        }`}\r\n        onClick={() => toggleSidebar()}\r\n      >\r\n        <img\r\n          src={isSideBarOpen ? hideSidebarIcon : showSidebarIcon}\r\n          alt=\"show/hide sidebar icon\"\r\n        />\r\n        {isSideBarOpen && <p className=\"heading-M\">Hide Sidebar</p>}\r\n      </div>\r\n      {isBoardModalOpen && (\r\n        <AddEditBoardModal\r\n          type=\"add\"\r\n          setIsBoardModalOpen={setIsBoardModalOpen}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,uBAAuB;AAC9B,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,iBAAiB,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,eAAe,SAASC,OAAOA,CAAC;EAAEC,aAAa;EAAEC;AAAiB,CAAC,EAAE;EAAAC,EAAA;EACnE,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAMa,aAAa,GAAGA,CAAA,KAAM;IAC1BJ,gBAAgB,CAAEK,IAAI,IAAK,CAACA,IAAI,CAAC;EACnC,CAAC;EAED,oBACER,OAAA;IAAKS,SAAS,EAAE,YAAY,CAACP,aAAa,IAAI,gBAAgB,IAAIG,gBAAgB,IAAI,iBAAiB,EAAG;IAAAK,QAAA,GACvGR,aAAa,iBAAIF,OAAA,CAACH,cAAc;MAACS,mBAAmB,EAAEA;IAAoB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9Ed,OAAA;MACES,SAAS,EAAE,6BACT,CAACP,aAAa,IAAI,eAAe,EAChC;MACHa,OAAO,EAAEA,CAAA,KAAMR,aAAa,CAAC,CAAE;MAAAG,QAAA,gBAE/BV,OAAA;QACEgB,GAAG,EAAEd,aAAa,GAAGN,eAAe,GAAGD,eAAgB;QACvDsB,GAAG,EAAC;MAAwB;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,EACDZ,aAAa,iBAAIF,OAAA;QAAGS,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC,EACLT,gBAAgB,iBACfL,OAAA,CAACF,iBAAiB;MAChBoB,IAAI,EAAC,KAAK;MACVZ,mBAAmB,EAAEA;IAAoB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACV,EAAA,CA7BuBH,OAAO;AAAAkB,EAAA,GAAPlB,OAAO;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}